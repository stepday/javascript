
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>webRTC-一种及时通讯的技术</title>
    <style type="text/css">
    #startbutton {
        width: 100px;
        height: 35px;
        line-height: 35px;
        background: #009688;
        color: #fff;
        border: none;
        outline: none;
        box-shadow: 1px 1px 3px #009688;
        border-radius: 4px;
        cursor: pointer;
    }
    </style>
</head>

<body>
    <div class="camera">
        <video id="video">Video stream not avaliable</video>
        <button id="startbutton">开启摄像头</button>
    </div>
    <canvas id="canvas">
    </canvas>
    <div class="output">
        <img id="photo" alt="The screen capture will appear in this box.">
    </div>
    <script type="text/javascript">
    (function() {
        var width = 320; // We will scale the photo width to this
        var height = 0; // This will be computed based on the input stream

        var streaming = false;

        var video = null;
        var canvas = null;
        var photo = null;
        var startbutton = null;


        // 初始化
        function startup() {
            video = document.getElementById('video');
            canvas = document.getElementById('canvas');
            photo = document.getElementById('photo');
            startbutton = document.getElementById('startbutton');


            // 理由web API新特性 获取用户的摄像头和声音输入流
            navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                .then(function(stream) {
                    video.srcObject = stream;
                    video.play();
                })
                .catch(function(err) {
                    console.log("An error occurred: " + err);
                });

            video.addEventListener('canplay', function(ev) {
                if (!streaming) {
                    height = video.videoHeight / (video.videoWidth / width);

                    video.setAttribute('width', width);
                    video.setAttribute('height', height);
                    canvas.setAttribute('width', width);
                    canvas.setAttribute('height', height);
                    streaming = true;
                }
            }, false);


            startbutton.addEventListener('click', function(ev) {
                takepicture();
                ev.preventDefault();
            }, false);

            clearphoto();
        }

        function clearphoto() {
            var context = canvas.getContext('2d');
            context.fillStyle = "#AAA";
            context.fillRect(0, 0, canvas.width, canvas.height);

            var data = canvas.toDataURL('image/png');
            photo.setAttribute('src', data);
        }

        // 拍照 将video 截屏放到canvas上 利用其转换为base64 放于img上
        function takepicture() {
            var context = canvas.getContext('2d');
            if (width && height) {
                canvas.width = width;
                canvas.height = height;
                context.drawImage(video, 0, 0, width, height);

                var data = canvas.toDataURL('image/png');
                photo.setAttribute('src', data);
            } else {
                clearphoto();
            }
        }

        // 加载后执行初始化
        window.addEventListener('load', startup, false);

    })();
    </script>
</body>

</html>
